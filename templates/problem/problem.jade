extends common-content
- load staticfiles
- load mathtag
- load markdown_trois_tags
- load cache
- load smart_math

block content_media
    script(type='text/javascript', src='{% static "common.js" %}')
    style
        a.view-pdf {
            float: right;
            padding-top: 1em;
        }

block header
    a.view-pdf(href='{% url "problem_pdf" problem.code %}')
        img(style='position:relative;top:2px', src='http://www.adobe.com/images/pdficon_small.png')
        = ' View as PDF'
        sup= ' (beta)'

block info_float
    a.unselectable.button.full(href='{% url "judge.views.problem_submit" problem.code %}') Submit solution
    hr
    if request.user.is_authenticated and has_submissions
        a(href='{% url "user_submissions" problem.code request.user.username %}') My submissions
        br
    a(href='{% url "chronological_submissions" problem.code %}') All submissions
    br
    a(href='{% url "ranked_submissions" problem.code %}') Best submissions

    if perms.judge.change_problem
        hr
        a(href='{% url "admin:judge_problem_change" problem.id %}') Edit problem
        br
    elif perms.judge.edit_own_problem and request.user.profile.id in problem.author_ids
        hr
        a(href='{% url "problem_edit" problem.code %}') Edit problem
        br
    hr
    br
    if contest_problem
        b Points:
        | &nbsp;#{contest_problem.points}
        if contest_problem.partial
            | (partial)
    else
        b Points:
        | &nbsp;#{problem.points|floatformat}
        if problem.partial
            | (partial)
    br
    b Time limit:
    | &nbsp;#{problem.time_limit}s
    br
    b Memory limit:
    -with memory=problem.memory_limit
        if memory < 1000
            | #{memory|floatformat:"-2"}K
        else
            -math memory "$1 / 1024" as megabytes
            | #{megabytes|floatformat:"-2"}M
    br
    b Author(s):
    for author in problem.authors_list
        a(href='{% url "judge.views.user" author.user.username %}') #{author.user.username}
        if not forloop.last
            |,&nbsp;
    br
    br
    div#problem-types
        div.toggle.closed.unselectable
            span.icon
            | Problem type(s)
        div.toggled(style="display:none") #{problem.types_list|join:", "}
    br
    if show_languages
        div#allowed-langs
            div.toggle.open.unselectable
                span.icon
                | Allowed languages
            div.toggled(style="margin-bottom:-1em") #{problem.languages_list|join:", "}
        br

block description
    - cache 86400 problem_html problem.id
        | #{problem.description|markdown:"problem"|smart_math}

block comments
    .comment-area
        script(src='{% static "placeholder-compat.js" %}')
        h2 Comments
        include comment/list
