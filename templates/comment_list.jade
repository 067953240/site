-load staticfiles

script(type='text/javascript', src='{% static "jquery-cookie.js" %}')
script(type='text/javascript')
    $(document).ready(function () {
        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }

        $.ajaxSetup({
            beforeSend: function(xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", $.cookie('csrftoken'));
                }
            }
        });

        window.comment_set_parent = function (parent) {
            $('form#comment-submit input#id_parent').val(parent);
            $('form#comment-submit input#id_title').val('Re: ' + $('#comment-' + id + ' .comment-title').val());
        };

        function ajax_vote(url, id, delta) {
            return $.ajax({
                url: url,
                type: "POST",
                data: {
                    id: id
                },
                success: function (data, textStatus, jqXHR) {
                    var score = $('#comment-' + id + ' .comment-score').first();
                    score.text(parseInt(score.text()) + delta);
                },
                error: function (data, textStatus, jqXHR) {
                    alert('Could not vote: ' + data.responseText);
                }
            });
        }

        window.comment_upvote = function (id) {
            ajax_vote('{% url "judge.views.upvote_comment" %}', id, 1);
        };

        window.comment_downvote = function (id) {
            ajax_vote('{% url "judge.views.downvote_comment" %}', id, -1);
        };
    });

ul.comments.top-level-comments
    if comment_list
        for comment in comment_list
            include comment

if request.user.is_authenticated and comment_form
    .form-area.comment-submit
        block comment_submit_title
            h4 New Comment
        form#comment-submit(action='', method='post')
            -csrf_token
            table(border=0) #{comment_form.as_table}
            input(type='submit', value='Submit!')