- load media_extract
- load compress
- load staticfiles

- compress css
    link(href='{% static "featherlight.min.css" %}', type='text/css', rel='stylesheet', media='all')
    | #{comment_form.media|media_type:"css"}
    style(media='all').
        .featherlight {
            z-index: 1000;
        }

        .revision-text p:first-child { margin-top: 0; }
        .revision-text p:last-child { margin-bottom: 0; }
        .comment-author { margin-bottom: 1em }
        .featherlight-edit .featherlight-content {
            background: #FAFAFA;
            padding: 10px 15px 10px 10px;
            border-radius: 10px;
            border: 1px solid #CCC;
        }

        .comment-author img {
            width: 1.25em;
            height: 1.25em;
            border-radius: 0.2em;
            vertical-align: bottom;
            margin-right: 0.3em;
        }

- compress js
    script(src='{% static "featherlight.min.js" %}', type='text/javascript', charset='utf-8')
    script(src='{% static "placeholder-compat.js" %}', type='text/javascript')
    | #{comment_form.media|media_type:"js"}

    script(type='text/javascript', src='{% static "jquery-cookie.js" %}')
    script(type='text/javascript')
        $(document).ready(function () {
            function csrfSafeMethod(method) {
                // these HTTP methods do not require CSRF protection
                return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
            }

            $.ajaxSetup({
                beforeSend: function(xhr, settings) {
                    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                        xhr.setRequestHeader("X-CSRFToken", $.cookie('csrftoken'));
                    }
                }
            });

            window.comment_set_parent = function (parent) {
                $('form#comment-submit input#id_parent').val(parent);
                $('form#comment-submit input#id_title').val('Re: ' + $('#comment-' + parent + ' .comment-title').first().text());
                $('html, body').animate({
                    scrollTop: $(".form-area.comment-submit").offset().top - $('#navigation').height() - 4
                }, 500);
            };

            function ajax_vote(url, id, delta) {
                return $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        id: id
                    },
                    success: function (data, textStatus, jqXHR) {
                        var score = $('#comment-' + id + ' .comment-score').first();
                        score.text(parseInt(score.text()) + delta);
                    },
                    error: function (data, textStatus, jqXHR) {
                        alert('Could not vote: ' + data.responseText);
                    }
                });
            }

            window.comment_upvote = function (id) {
                ajax_vote('{% url "judge.views.upvote_comment" %}', id, 1);
            };

            window.comment_downvote = function (id) {
                ajax_vote('{% url "judge.views.downvote_comment" %}', id, -1);
            };
        });

        $('.comments').find('a.edit-link').featherlight({
            afterOpen: function () {
                if ('DjangoPagedown' in window) {
                    var $wmd = $('.featherlight .wmd-input');
                    if ($wmd.length) {
                        window.DjangoPagedown.createEditor($wmd.get(0));
                        if ('MathJax' in window) {
                            var preview = $('.featherlight div.wmd-preview')[0];
                            window.editors[$wmd.attr('id')].hooks.chain('onPreviewRefresh', function () {
                                MathJax.Hub.Queue(["Typeset", MathJax.Hub, preview]);
                            });
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub, preview]);
                        }
                    }
                }
                $('#comment-edit').submit(function(event) {
                    event.preventDefault();
                    var id = $("#comment-edit").find('.comment-id').text();
                    var readback = $("#comment-edit").find('.read-back').text();
                    $.post($(this).attr('action'), $(this).serialize()).done(function(data) {
                        $.featherlight.current().close();
                        $.ajax({
                            url: readback
                        }).done(function (data) {
                            var $area = $('#comment-' + id).find('.comment-body').first();
                            $area.html(data);
                            if ('MathJax' in window) MathJax.Hub.Queue(["Typeset", MathJax.Hub, $area.get(0)]);
                        }).fail(function () {
                            console.log('Failed to update comment:' + id);
                        });
                    });
                });
            },
            variant: 'featherlight-edit'
        });
        $('.comments').find('a.history-link').featherlight({
            afterOpen: function () {
                if ('MathJax' in window)
                    MathJax.Hub.Queue(['Typeset', MathJax.Hub, $('.featherlight-content').get(0)]);
            }
        });
