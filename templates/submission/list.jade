extends base
- load staticfiles
- load cache
- load cache_key

block media
    link(rel='stylesheet', href='{% static "status.css" %}')
    script(type='text/javascript', src='{% static "common.js" %}')
    script(type='text/javascript', src='{% static "event.js" %}')
    script(type='text/javascript', src='{% static "moment.min.js" %}')
    style
        #submissions-table {
            width: 75%;
            border: 0;
            margin-left: 0
        }

        td.sub-result {
            min-width: 80px;
        }

        td.sub-result .state {
            font-size: 0.7em;
            font-weight: bold;
            padding-top: 0.5em
        }

        td.sub-result .score {
            font-size: 1.3em;
            color: black
        }

        td.sub-info {
            width: 90%;
            text-align: left;
            padding-left: 20px;
            border-right: none;
        }

        td.sub-info-grading {
            width: auto !important;
            min-width: 58% !important;
        }

        td.sub-testcase {
            color: #555;
            min-width: 32%;
            vertical-align: middle;
            text-align: right;
            padding-right: 2%;
            border-right: none;
        }

        td.sub-info .name {
            font-size: 1.3em;
            font-weight: bold
        }

        td.sub-info .time {
            color: #555
        }

        td.sub-prop, td.sub-usage {
            white-space: nowrap;
        }

        td.sub-usage .time {
            font-weight: bold;
        }

    if request.user.is_authenticated and perms.judge.rejudge_submission
        script(type='text/javascript', src='{% static "jquery-cookie.js" %}')
        script(type='text/javascript')
            window.rejudge_submission = function(id) {
                if (confirm('Are you sure you want to rejudge?')) {
                    $.ajax({
                        url: '{% url "judge.views.rejudge_submission" %}',
                        type: "POST",
                        data: {
                            id: id,
                            csrfmiddlewaretoken: $.cookie('csrftoken')
                        }
                    });
                }
            }
    script(type='text/javascript')
        $(function () {
            fix_div($('.info-float'), 40, true, function (info) {
                info.css('width', (info.width() / $(window).width() * 100) + '%');
                return $('<div/>', {
                    id: 'fake-info-float',
                    class: 'info-float'
                }).css('width', '20%').height(info.height()).prependTo('#content-body');
            });

            var time_cache = {};
            window.update_relative_time = function (row) {
                var id = row.attr('id');
                if (!(id in time_cache))
                    time_cache[id] = row.find('span.time').text();
                row.find('span.time').text(moment(row.find('span.moment').text()).fromNow() + ' (' + time_cache[id] + ')');
            };

            function update_all_time() {
                $('#submissions-table').find('tr').each(function () {
                    update_relative_time($(this));
                });
            }
            setInterval(update_all_time, 60000);
            update_all_time();
        });
    if dynamic_update and last_msg
        script(type='text/javascript', src='{% static "common.js" %}')
        if IN_CONTEST
            script(type='text/javascript')
                window.current_contest = '#{CONTEST.contest.key}';
        else
            script(type='text/javascript')
                window.current_contest = null;
        script(type='text/javascript')
            $(function () {
                var table = $('#submissions-table');
                var statistics = $("#statistics-table");
                var doing_ajax = false;
                var first = parseInt(table.find('tr:first-child').attr('id'));

                var update_submission = function (id, force) {
                    var row = table.find('tr#' + id);
                    if (row.length < 1) {
                        if (id < first)
                            return;
                        first = id;
                        row = $('<tr/>', {id: id}).hide().prependTo(table);
                        table.find('tr:last-child').hide('slow', function () {
                            $(this).remove();
                        });
                    }
                    if (force || !doing_ajax) {
                        if (!force) doing_ajax = true;
                        $.ajax({
                            url: '{% url "judge.views.single_submission_query" %}',
                            data: {id: id}
                        }).done(function (data) {
                            var was_shown = row.is(':visible');
                            row.html(data);
                            if (!was_shown)
                                row.show('slow');
                            update_relative_time(row);
                            if (!force) doing_ajax = false;
                        }).fail(function () {
                            console.log('Failed to update submission: ' + id);
                            if (!force) doing_ajax = false;
                        });
                    }
                };

                var $body = $(document.body);
                var receiver = new EventReceiver(
                        "{{ EVENT_DAEMON_LOCATION }}", "{{ EVENT_DAEMON_POLL_LOCATION }}",
                        ['submissions'], #{last_msg}, function (message) {
                            if (current_contest && message.contest != current_contest)
                                return;
                            if (message.type == 'update-submission') {
                                if (message.state == 'grading-end')
                                    return;
                                if (message.state == 'test-case' && $body.hasClass('window-hidden'))
                                    return;
                                update_submission(message.id);
                            } else if (message.type == 'done-submission') {
                                update_submission(message.id, true);

                                $.ajax({
                                    url: '{% url "judge.views.statistics_table_query" %}'
                                }).done(function (data) {
                                    statistics.html(data);
                                }).fail(function () {
                                    console.log('Failed to update statistics table!' + id);
                                });
                            }
                        }
                );
            });


block body
    br
    .info-float(style='width:20%')
        #statistics-table
            include problem/statistics_table
    if page_obj.num_pages > 1
        div(style='margin-bottom:10px;')
            include list_pages

    table#submissions-table.table
        if request.user.is_authenticated
            - var profile_id = request.user.profile.id
        else
            - var profile_id = 0
        each submission in submissions
            if submission.problem.is_public
                tr(id=submission.id)
                    if submission.is_graded
                        - get_cache_version "submission" submission.id as sub_version
                        - var done = profile_id == submission.user_id or submission.problem_id in completed_problem_ids
                        - cache 86400 submission_row sub_version submission.id show_problem done perms.judge.change_submission request.user.profile.timezone
                            include submission/row
                    else
                        include submission/row

    if page_obj.num_pages > 1
        div(style='margin-top:10px;')
            include list_pages
