extends base
-load staticfiles
-load mathtag
-load markdown_trois_tags
-load cache

block media
    link(rel='stylesheet', href='{% static "status.css" %}')
    link(rel='stylesheet', href='{% static "content-description.css" %}')
    link(rel='stylesheet', href='{% static "pygment-github.css" %}', type='text/css')
    script(type='text/javascript')
        $(function () {
            fix_div($('.info-float'), 40, true, function (info) {
                return $('<div/>', {id: 'fake-info-float', class: 'info-float'}).css({
                    'width': '11%',
                    'padding-left': '40px'
                }).prependTo('#content-body');
            });
        });

block body
    .info-float(style='width:11%;padding-left:40px')
        a(href='{% url "judge.views.problem_submit" problem.code %}') Submit
        if request.user.is_authenticated
            br
            if has_submissions
                a(href='{% url "judge.views.user_submissions" problem.code request.user.username %}') My submissions
            hr
        else
            br
        a(href='{% url "judge.views.chronological_submissions" problem.code %}') All submissions
        br
        a(href='{% url "judge.views.ranked_submissions" problem.code %}') Best submissions
        if perms.judge.change_problem
            hr
            a(href='{% url "admin:judge_problem_change" problem.id %}') Edit problem
            br
        hr
        br
        b Points:
        | &nbsp;#{problem.points}
        if problem.partial
            | &nbsp(partial)
        br
        b Time Limit:
        | &nbsp;#{problem.time_limit}s
        br
        b Memory Limit:
        -with memory=problem.memory_limit
            if memory < 1000
                | #{memory|floatformat:"-2"}K
            else
                -math memory "$1 / 1024" as megabytes
                | #{megabytes|floatformat:"-2"}M
        br
        br
        b Problem type(s):
        br
        | #{problem.types_list|join:", "}
        br
        br
        b Languages allowed:
        br
        | #{problem.languages_list|join:", "}
        br
    .content-description
        -cache 3600 problem_html problem.id
            | #{problem.description|markdown:"problem"}
        hr
    .comment-area
        h3 Comments
        include comment_list

block bodyend
    if '<!--math-->' in problem.description
        | <script type='text/x-mathjax-config'>
            | MathJax.Hub.Config({
            |     tex2jax: {
            |         inlineMath: [['~', '~'], ['\\(', '\\)']]
            |     }
            | });
        | </script>
        script(type='text/javascript', src='//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML')
