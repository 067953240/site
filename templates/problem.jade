extends base
-load staticfiles
-load mathtag
-load markdown_trois_tags
-load cache

block media
    link(rel='stylesheet', href='{% static "status.css" %}')
    link(rel='stylesheet', href='{% static "content-description.css" %}')
    link(rel='stylesheet', href='{% static "pygment-github.css" %}', type='text/css')
    script(type='text/javascript')
        $(function () {
            fix_div($('.info-float'), 40, true, function (info) {
                return $('<div/>', {id: 'fake-info-float', class: 'info-float'}).css({
                    'width': '11%',
                    'padding-left': '40px'
                }).prependTo('#content-body');
            });
        });
        $(function () {
            $('a.toggle').each(function() {
                $(this).click(function (event) {
                    var a = this;
                    var types = $('#' + $(a).attr('id') + '-toggle');
                    if (types.is(':visible')) {
                        types.hide();
                    } else {
                        types.show();
                    }
                    $(a).toggleClass('open');
                    $(a).toggleClass('closed');
                    event.preventDefault();
                });
            });
        });
    style
        .toggle.open {
            border-style: solid;
            border-width: 7px 6px 0 6px;
            border-color: #076591 transparent transparent transparent;
            font-size: 0;
            vertical-align: middle;
            line-height: 0;
            width: 0;
            height: 0;
            margin-right: 3px;
            margin-left: -15px;
        }

        .toggle.closed {
            border-style: solid;
            border-width: 6px 0 6px 7px;
            border-color: transparent transparent transparent #076591;
            margin-right: 5px;
            margin-left: -12px;
            font-size: 0;
            vertical-align: middle;
            width: 0;
            height: 0;
        }


block body
    br
    .info-float(style='width:11%;padding-left:40px')
        a.unselectable.button.full(href='{% url "judge.views.problem_submit" problem.code %}') Submit solution
        hr
        if request.user.is_authenticated and has_submissions
            a(href='{% url "judge.views.user_submissions" problem.code request.user.username %}') My submissions
            br
        a(href='{% url "judge.views.chronological_submissions" problem.code %}') All submissions
        br
        a(href='{% url "judge.views.ranked_submissions" problem.code %}') Best submissions
        if perms.judge.change_problem
            hr
            a(href='{% url "admin:judge_problem_change" problem.id %}') Edit problem
            br
        hr
        br
        if contest_problem
            b Points:
            | &nbsp;#{contest_problem.points}
            if contest_problem.partial
                | (partial)
        else
            b Points:
            | &nbsp;#{problem.points}
            if problem.partial
                | (partial)
        br
        b Time limit:
        | &nbsp;#{problem.time_limit}s
        br
        b Memory limit:
        -with memory=problem.memory_limit
            if memory < 1000
                | #{memory|floatformat:"-2"}K
            else
                -math memory "$1 / 1024" as megabytes
                | #{megabytes|floatformat:"-2"}M
        br
        br
        a.toggle.closed#problem-types
        span(style='font-weight:bold').unselectable Problem type(s):
        #problem-types-toggle(style="display:none;margin-bottom:-1em") #{problem.types_list|join:", "}
        br
        if show_languages
            br
            a.toggle.open#allowed-langs
            span(style='font-weight:bold').unselectable Allowed languages:
            #allowed-langs-toggle(style="margin-bottom:-1em") #{problem.languages_list|join:", "}
            br
    .content-description
        -cache 3600 problem_html problem.id
            | #{problem.description|markdown:"problem"}
        hr
    .comment-area
        script(src='{% static "placeholder-compat.js" %}')
        h2 Comments
        include comment_list

block bodyend
    if '<!--math-->' in problem.description
        | <script type='text/x-mathjax-config'>
        | MathJax.Hub.Config({
        | tex2jax: {
        | inlineMath: [['~', '~'], ['\\(', '\\)']]
        | }
        | });
        | </script>
        script(type='text/javascript', src='//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML')
