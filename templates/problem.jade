extends base
- load staticfiles
- load mathtag
- load markdown_trois_tags
- load cache
- load smart_math

block media
    link(rel='stylesheet', href='{% static "status.css" %}')
    link(rel='stylesheet', href='{% static "content-description.css" %}')
    link(rel='stylesheet', href='{% static "pygment-github.css" %}', type='text/css')
    script(type='text/javascript')
        $(function () {
            fix_div($('.info-float'), 40, true, function (info) {
                return $('<div/>', {id: 'fake-info-float', class: 'info-float'}).css({
                    'width': '11%',
                    'padding-left': '40px'
                }).prependTo('#content-body');
            });

            $('span.toggle').click(function () {
                var a = $(this);
                var types = $('#' + a.attr('id') + '-toggle');
                if (types.is(':visible')) {
                    types.hide(400);
                } else {
                    types.show(400);
                }
                a.toggleClass('open');
                a.toggleClass('closed');
            });
        });
    style
        .toggle {
            font-weight: bold;
        }

        .toggle .icon {
            vertical-align: middle;
            width: .7em;
            height: .7em;
            margin: -3px .2em 0 -.9em;
            display: inline-block;
            background-size: .7em .7em;
            background-image: url('{% static "icons/arrow.png" %}');
            -webkit-transition: transform .4s;
            -moz-transition: transform .4s;
            -o-transition: transform .4s;
            transition: transform .4s;
        }

        .toggle.open .icon {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            -o-transform: rotate(90deg);
            transform: rotate(90deg);
        }


block body
    br
    .info-float(style='width:11%;padding-left:40px')
        a.unselectable.button.full(href='{% url "judge.views.problem_submit" problem.code %}') Submit solution
        hr
        if request.user.is_authenticated and has_submissions
            a(href='{% url "judge.views.user_submissions" problem.code request.user.username %}') My submissions
            br
        a(href='{% url "judge.views.chronological_submissions" problem.code %}') All submissions
        br
        a(href='{% url "judge.views.ranked_submissions" problem.code %}') Best submissions
        if perms.judge.change_problem
            hr
            a(href='{% url "admin:judge_problem_change" problem.id %}') Edit problem
            br
        hr
        br
        if contest_problem
            b Points:
            | &nbsp;#{contest_problem.points}
            if contest_problem.partial
                | (partial)
        else
            b Points:
            | &nbsp;#{problem.points}
            if problem.partial
                | (partial)
        br
        b Time limit:
        | &nbsp;#{problem.time_limit}s
        br
        b Memory limit:
        -with memory=problem.memory_limit
            if memory < 1000
                | #{memory|floatformat:"-2"}K
            else
                -math memory "$1 / 1024" as megabytes
                | #{megabytes|floatformat:"-2"}M
        br
        br
        span.toggle.closed.unselectable#problem-types
            span.icon
            | Problem type(s):
        #problem-types-toggle(style="display:none;margin-bottom:-1em") #{problem.types_list|join:", "}
        br
        if show_languages
            br
            span.toggle.open.unselectable#allowed-langs
                span.icon
                | Allowed languages:
            #allowed-langs-toggle(style="margin-bottom:-1em") #{problem.languages_list|join:", "}
            br
    .content-description
        -cache 3600 problem_html problem.id
            | #{problem.description|markdown:"problem"|smart_math}
        hr
    .comment-area
        script(src='{% static "placeholder-compat.js" %}')
        h2 Comments
        include comment_list

block bodyend
    if '<!--math-->' in problem.description
        | <script type='text/x-mathjax-config'>
        | MathJax.Hub.Config({
        | tex2jax: {
        | inlineMath: [['~', '~'], ['\\(', '\\)']]
        | }
        | });
        | </script>
        script(type='text/javascript', src='//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML')                                                                                                                              
        script(type='text/javascript')
            MathJax.Hub.queue.Push(function () {
                $('.tex-image').hide();
                $('.tex-text').show();
            });
